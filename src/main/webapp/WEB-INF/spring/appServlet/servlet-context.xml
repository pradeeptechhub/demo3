<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven conversion-service="conversion-service"/>

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />

	<beans:bean id="conversion-service" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<beans:property name="converters">
			<beans:list>
				<beans:bean class="com.patel.pradeep.converters.JulianDateConverter" />
				<beans:bean class="com.patel.pradeep.converters.ResourceConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<beans:bean class="com.patel.pradeep.model.HitCounter" scope="application">
		<!-- aop:scoped-proxy helps injecting a bean of one scope (request) to another (singleton) -->
		<aop:scoped-proxy/>
	</beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/project/**"/>
			<beans:bean class="com.patel.pradeep.interceptors.GlobalInterceptor" />
		</interceptor>
	</interceptors>

	<beans:bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="viewResolvers">
			<beans:list>
				<!-- Resolves views selected for rendering by @Controllers to .jsp resources
					in the /WEB-INF/views directory -->
				<beans:bean id="viewResolver"
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<beans:property name="prefix" value="/WEB-INF/views/" />
					<beans:property name="suffix" value=".jsp" />
				</beans:bean>
				<beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
					<beans:property name="location"
						value="/WEB-INF/spring/appServlet/views.xml" />
					<beans:property name="order" value="1" />
				</beans:bean>
			</beans:list>
		</beans:property>
		<beans:property name="contentNegotiationManager">
			<beans:bean
				class="org.springframework.web.accept.ContentNegotiationManager">
				<beans:constructor-arg>
					<beans:bean
						class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<beans:constructor-arg>
							<beans:map>
								<beans:entry key="json" value="application/json" />
								<beans:entry key="xml" value="application/xml" />
							</beans:map>
						</beans:constructor-arg>
					</beans:bean>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>
		<beans:property name="defaultViews">
			<beans:list>
				<beans:bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<context:component-scan base-package="com.patel.pradeep.controller" />
	<context:component-scan base-package="com.patel.pradeep.resolver" />

</beans:beans>
